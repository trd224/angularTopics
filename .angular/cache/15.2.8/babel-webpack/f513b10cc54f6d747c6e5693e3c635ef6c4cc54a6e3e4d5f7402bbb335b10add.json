{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DropdownService {\n  constructor() {\n    this.state = [{\n      id: 1,\n      name: 'rajasthan',\n      district: ['kota', 'jaipur', 'ajmer']\n    }, {\n      id: 2,\n      name: 'panjab',\n      district: ['batinda', 'chandighar', 'aaa']\n    }, {\n      id: 2,\n      name: 'mp',\n      district: ['indor', 'bhopal', 'shoypur']\n    }];\n  }\n  getDistrict(value) {\n    //console.log(value);\n    return this.state.find(item => {\n      return item.name == value;\n    });\n  }\n}\nDropdownService.ɵfac = function DropdownService_Factory(t) {\n  return new (t || DropdownService)();\n};\nDropdownService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DropdownService,\n  factory: DropdownService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAQ1BC;IANA,UAAK,GAAG,CACN;MAACC,EAAE,EAAC,CAAC;MAAEC,IAAI,EAAC,WAAW;MAAEC,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO;IAAC,CAAC,EAC/D;MAACF,EAAE,EAAC,CAAC;MAAEC,IAAI,EAAC,QAAQ;MAAEC,QAAQ,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK;IAAC,CAAC,EACjE;MAACF,EAAE,EAAC,CAAC;MAAEC,IAAI,EAAC,IAAI;MAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS;IAAC,CAAC,CAC5D;EAEe;EAEhBC,WAAW,CAACC,KAAS;IACnB;IACA,OAAO,IAAI,CAACC,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAI;MAC9B,OAAQA,IAAI,CAACN,IAAI,IAAIG,KAAK;IAE5B,CAAC,CAAC;EACJ;;AAhBWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["DropdownService","constructor","id","name","district","getDistrict","value","state","find","item","factory","providedIn"],"sourceRoot":"","sources":["I:\\#Learn\\angular-all-topics\\src\\app\\_services\\dropdown.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DropdownService {\n\n  state = [\n    {id:1, name:'rajasthan', district: ['kota', 'jaipur', 'ajmer']},\n    {id:2, name:'panjab', district: ['batinda', 'chandighar', 'aaa']},\n    {id:2, name:'mp', district: ['indor', 'bhopal', 'shoypur']}\n  ]\n\n  constructor() { }\n\n  getDistrict(value:any) {\n    //console.log(value);\n    return this.state.find((item) => {\n      return (item.name == value)\n      \n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}