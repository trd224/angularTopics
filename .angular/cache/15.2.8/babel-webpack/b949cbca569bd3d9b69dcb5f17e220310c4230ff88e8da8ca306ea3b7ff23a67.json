{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/dropdown.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DependentDropdownComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r2.name);\n  }\n}\nfunction DependentDropdownComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r3);\n  }\n}\nexport class DependentDropdownComponent {\n  constructor(dropdownService) {\n    this.dropdownService = dropdownService;\n  }\n  ngOnInit() {\n    //console.log(this.dropdownService.state);\n    this.state = this.dropdownService.state;\n    console.log(this.state[0].district);\n    this.district = this.state[0].district;\n  }\n  getDistrict(e) {\n    //console.log(e.target.value);\n    let v = e.target.value;\n    this.district = this.dropdownService.getDistrict(v)?.district;\n    console.log(this.district);\n  }\n}\nDependentDropdownComponent.ɵfac = function DependentDropdownComponent_Factory(t) {\n  return new (t || DependentDropdownComponent)(i0.ɵɵdirectiveInject(i1.DropdownService));\n};\nDependentDropdownComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DependentDropdownComponent,\n  selectors: [[\"app-dependent-dropdown\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function DependentDropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵlistener(\"change\", function DependentDropdownComponent_Template_select_change_0_listener($event) {\n        return ctx.getDistrict($event);\n      });\n      i0.ɵɵtemplate(1, DependentDropdownComponent_option_1_Template, 2, 2, \"option\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"select\");\n      i0.ɵɵtemplate(3, DependentDropdownComponent_option_3_Template, 2, 2, \"option\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.state);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.district);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAGIA,iCAAiD;IAAAA,YAAU;IAAAA,iBAAS;;;;IAApCA,iCAAgB;IAACA,eAAU;IAAVA,+BAAU;;;;;IAI3DA,iCAA+C;IAAAA,YAAK;IAAAA,iBAAS;;;;IAA1BA,4BAAW;IAACA,eAAK;IAALA,0BAAK;;;ACCxD,OAAM,MAAOC,0BAA0B;EAIrCC,YACUC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EACvB;EAEFC,QAAQ;IACJ;IACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,eAAe,CAACE,KAAK;IACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC;IACnC,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,CAACG,QAAQ;EAE1C;EAEAC,WAAW,CAACC,CAAK;IACf;IACA,IAAIC,CAAC,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACtB,IAAI,CAACL,QAAQ,GAAG,IAAI,CAACL,eAAe,CAACM,WAAW,CAACE,CAAC,CAAC,EAAEH,QAAQ;IAC7DF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC5B;;AArBWP,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDNvClB,iCAAuC;MAA/BA;QAAA,OAAUmB,uBAAmB;MAAA,EAAC;MAClCnB,iFAAoE;MACxEA,iBAAS;MAETA,8BAAQ;MACJA,iFAA6D;MACjEA,iBAAS;;;MALiBA,eAAQ;MAARA,mCAAQ;MAIRA,eAAW;MAAXA,sCAAW","names":["i0","DependentDropdownComponent","constructor","dropdownService","ngOnInit","state","console","log","district","getDistrict","e","v","target","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["I:\\Learn\\angular-all-topics\\src\\app\\_components\\dependent-dropdown\\dependent-dropdown.component.html","I:\\Learn\\angular-all-topics\\src\\app\\_components\\dependent-dropdown\\dependent-dropdown.component.ts"],"sourcesContent":["<!-- <p>dependent-dropdown works!</p> -->\n\n<select (change)=\"getDistrict($event)\">\n    <option *ngFor=\"let s of state\" [value]=\"s.name\">{{s.name}}</option>\n</select>\n\n<select>\n    <option *ngFor=\"let d of district\" [value]=\"d\">{{d}}</option>\n</select>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { DropdownService } from 'src/app/_services/dropdown.service';\n\n@Component({\n  selector: 'app-dependent-dropdown',\n  templateUrl: './dependent-dropdown.component.html',\n  styleUrls: ['./dependent-dropdown.component.scss']\n})\nexport class DependentDropdownComponent implements OnInit {\n\n  state: any;\n  district: any\n  constructor(\n    private dropdownService: DropdownService\n  ){}\n\n  ngOnInit(): void {\n      //console.log(this.dropdownService.state);\n      this.state = this.dropdownService.state;\n      console.log(this.state[0].district)\n      this.district = this.state[0].district;\n      \n  }\n\n  getDistrict(e:any){\n    //console.log(e.target.value);\n    let v = e.target.value;\n    this.district = this.dropdownService.getDistrict(v)?.district;\n    console.log(this.district);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}