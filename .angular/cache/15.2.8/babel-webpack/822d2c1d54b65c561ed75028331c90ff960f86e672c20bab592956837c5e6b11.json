{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReactiveFromComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  submitForm() {\n    console.log(this.myForm.controls['email'].errors);\n  }\n}\nReactiveFromComponent.ɵfac = function ReactiveFromComponent_Factory(t) {\n  return new (t || ReactiveFromComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nReactiveFromComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReactiveFromComponent,\n  selectors: [[\"app-reactive-from\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"submit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"type\", \"submit\"]],\n  template: function ReactiveFromComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function ReactiveFromComponent_Template_form_submit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;AAOhF,OAAM,MAAOC,qBAAqB;EAIhCC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAGrB;EAGAC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC;KACpD,CAAC;EACJ;EAEAC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC;EACnD;;AApBWb,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRlCC,+BAAmD;MAAxBA;QAAA,OAAUC,gBAAY;MAAA,EAAC;MAC9CD,2BAAK;MACiBA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAoD;MAKxDA,iBAAM;MACNA,2BAAK;MACkBA,sBAAM;MAAAA,iBAAQ;MACjCA,2BAAuD;MAC3DA,iBAAM;MACNA,iCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MAbnCA,sCAAoB","names":["Validators","ReactiveFromComponent","constructor","formBuilder","ngOnInit","myForm","group","name","required","email","submitForm","console","log","controls","errors","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["I:\\#Learn\\angular-all-topics\\src\\app\\_components\\reactive-from\\reactive-from.component.ts","I:\\#Learn\\angular-all-topics\\src\\app\\_components\\reactive-from\\reactive-from.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-from',\n  templateUrl: './reactive-from.component.html',\n  styleUrls: ['./reactive-from.component.scss']\n})\nexport class ReactiveFromComponent implements OnInit {\n\n  myForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ){\n\n  }\n\n\n  ngOnInit(): void {\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    })\n  }\n\n  submitForm(){\n    console.log(this.myForm.controls['email'].errors);\n  }\n}\n","<form [formGroup]=\"myForm\" (submit)=\"submitForm()\">\n    <div>\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\">\n        <!-- <div *ngIf=\"myForm.get('name')?.invalid && myForm.get('name')?.touched\">\n            <div *ngIf=\"myForm.get('name')?.errors && myForm.get('name')?.errors['required']\">name is required</div>\n            \n        </div> -->\n    </div>\n    <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <button type=\"submit\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}