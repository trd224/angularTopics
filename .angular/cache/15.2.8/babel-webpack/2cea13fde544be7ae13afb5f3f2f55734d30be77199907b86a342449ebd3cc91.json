{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AddHeaderService {\n  constructor() {}\n  intercept(req, next) {\n    let headerReq = req.clone({\n      setHeaders: {\n        'x-company-name': 'abc'\n      }\n    });\n    return next.handle(headerReq);\n  }\n}\nAddHeaderService.ɵfac = function AddHeaderService_Factory(t) {\n  return new (t || AddHeaderService)();\n};\nAddHeaderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AddHeaderService,\n  factory: AddHeaderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,IAAIC,SAAS,GAAGF,GAAG,CAACG,KAAK,CAAC;MACxBC,UAAU,EAAE;QACV,gBAAgB,EAAE;;KAErB,CAAC;IACF,OAAOH,IAAI,CAACI,MAAM,CAACH,SAAS,CAAC;EAC/B;;AAZWL,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAS,SAAhBT,gBAAgB;EAAAU,YAFf;AAAM","names":["AddHeaderService","constructor","intercept","req","next","headerReq","clone","setHeaders","handle","factory","providedIn"],"sourceRoot":"","sources":["I:\\#Learn\\angular-all-topics\\src\\app\\_interceptor\\add-header.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddHeaderService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n\n    let headerReq = req.clone({\n      setHeaders: {\n        'x-company-name': 'abc'\n      }\n    })\n    return next.handle(headerReq);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}