{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ReqResInterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    console.log(req.url);\n    return next.handle(req).pipe(tap(event => {\n      if (event.type == HttpEventType.Response) {\n        //event.body.title = 'jkjkjkjkjkjk'\n        event.body[0].title = \"rizwan\";\n        console.log(event.body);\n      }\n    }));\n  }\n}\nReqResInterceptorService.ɵfac = function ReqResInterceptorService_Factory(t) {\n  return new (t || ReqResInterceptorService)();\n};\nReqResInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReqResInterceptorService,\n  factory: ReqResInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,aAAa,QAAmD,sBAAsB;AAC1G,SAAqBC,GAAG,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,wBAAwB;EAEnCC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,GAAG,CAAC;IACpB,OAAOH,IAAI,CAACI,MAAM,CAACL,GAAG,CAAC,CAACM,IAAI,CAC1BV,GAAG,CAACW,KAAK,IAAG;MACV,IAAGA,KAAK,CAACC,IAAI,IAAIb,aAAa,CAACc,QAAQ,EAAC;QACtC;QACAF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,GAAG,QAAQ;QAC9BT,OAAO,CAACC,GAAG,CAACI,KAAK,CAACG,IAAI,CAAC;;IAE3B,CAAC,CAAC,CACH;EACH;;AAfWb,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAe,SAAxBf,wBAAwB;EAAAgB,YAFvB;AAAM","names":["HttpEventType","tap","ReqResInterceptorService","constructor","intercept","req","next","console","log","url","handle","pipe","event","type","Response","body","title","factory","providedIn"],"sourceRoot":"","sources":["I:\\Learn\\angular-all-topics\\src\\app\\_interceptor\\req-res-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReqResInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    console.log(req.url);\n    return next.handle(req).pipe(\n      tap(event => {\n        if(event.type == HttpEventType.Response){\n          //event.body.title = 'jkjkjkjkjkjk'\n          event.body[0].title = \"rizwan\"\n          console.log(event.body)\n        }\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}